# Generated by Django 5.2.5 on 2025-08-16 11:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('color', models.CharField(default='#6366f1', help_text='Hex color code', max_length=7, verbose_name='Color')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon Class')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Service Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(blank=True, max_length=200, verbose_name='Short Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon Class')),
                ('starting_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Starting Price')),
                ('price_unit', models.CharField(blank=True, default='per project', max_length=20, verbose_name='Price Unit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Technology Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon Class')),
                ('website_url', models.URLField(blank=True, verbose_name='Official Website')),
                ('proficiency', models.PositiveIntegerField(default=50, help_text='Proficiency level from 0 to 100', verbose_name='Proficiency Level')),
                ('years_experience', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Years of Experience')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Technology',
                'verbose_name_plural': 'Technologies',
                'ordering': ['-proficiency', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Post Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('excerpt', models.TextField(blank=True, max_length=300, verbose_name='Excerpt')),
                ('content', models.TextField(verbose_name='Content')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200, verbose_name='Tags')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('featured', 'Featured')], default='draft', max_length=20, verbose_name='Status')),
                ('featured_image', models.TextField(blank=True, help_text='Base64 encoded image data', verbose_name='Featured Image')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_management.category')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Company')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('replied', 'Replied'), ('closed', 'Closed')], default='new', max_length=20, verbose_name='Status')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_interest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_management.service', verbose_name='Service of Interest')),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='technologies',
            field=models.ManyToManyField(blank=True, to='project_management.technology'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Project Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Short Description')),
                ('detailed_description', models.TextField(blank=True, verbose_name='Detailed Description')),
                ('project_type', models.CharField(choices=[('web_app', 'Web Application'), ('mobile_app', 'Mobile Application'), ('desktop_app', 'Desktop Application'), ('api', 'API/Backend'), ('website', 'Website'), ('other', 'Other')], default='web_app', max_length=20, verbose_name='Project Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('featured', 'Featured'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('featured_image', models.TextField(blank=True, help_text='Base64 encoded image data', verbose_name='Featured Image')),
                ('gallery_images', models.TextField(blank=True, help_text='JSON array of base64 encoded images', verbose_name='Gallery Images')),
                ('live_url', models.URLField(blank=True, verbose_name='Live Demo URL')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub Repository')),
                ('documentation_url', models.URLField(blank=True, verbose_name='Documentation URL')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('client', models.CharField(blank=True, max_length=100, verbose_name='Client/Company')),
                ('team_size', models.PositiveIntegerField(default=1, verbose_name='Team Size')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project_management.category')),
                ('technologies', models.ManyToManyField(blank=True, to='project_management.technology')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('client_position', models.CharField(blank=True, max_length=100, verbose_name='Position/Title')),
                ('client_company', models.CharField(blank=True, max_length=100, verbose_name='Company')),
                ('client_email', models.EmailField(blank=True, max_length=254, verbose_name='Client Email')),
                ('client_photo', models.TextField(blank=True, help_text='Base64 encoded image data', verbose_name='Client Photo')),
                ('content', models.TextField(verbose_name='Testimonial Content')),
                ('rating', models.PositiveIntegerField(default=5, help_text='Rating from 1 to 5 stars', verbose_name='Rating')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Is Approved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='testimonials', to='project_management.project')),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-created_at'],
            },
        ),
    ]
